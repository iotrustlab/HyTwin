// Initial assumptions
A ≡ L1 ≤ x1 ∧ x1 ≤ H1 ∧ L2 ≤ x2 ∧ x2 ≤ H2  // Initial water levels within normal range
∧ V1 = 0 ∧ V2 = 0 ∧ P = 0                    // Valves and pump initially off
∧ ε ≥ 0 ∧ FL > 0                             // Positive scan cycle time and minimum flow rate
∧ LL < L1 ∧ LL < L2                          // Lower limits below normal operating range
∧ L1 < H1 ∧ L2 < H2 ∧ H1 < HH ∧ H2 < HH      // Hierarchical arrangement of thresholds
∧ t_attack = 0 ∧ t_detect = ∞                // Initial timing variables
∧ t_recovery > 0                             // Positive recovery window
∧ DT_active = 0                              // DT initially not intervening

// Main formula
A → [in; 
     {
       // Normal operation or attack scenario
       {ctrl; safe_ctrl} 
       ∪ 
       {t_attack := t; ctrl_attack; attacked_ctrl}
     };
     t := 0;
     {
       // System dynamics with DT monitoring
       {plant; 
        DT_monitor;
        {
          // During potential attack window
          ?(t - t_attack ≤ t2); 
          {
            // DT detection
            ?(unsafe_pred ∧ DT_active = 0); 
            t_detect := t;
            DT_active := 1
          }
          ∪ 
          // DT intervention
          {
            ?(DT_active = 1 ∧ t - t_detect ≤ t_recovery); 
            DT_intervention
          }
        }
       } & Q
     }
    ]S

// Input assignments
in ≡ f1 := *; f2 := *

// Normal control logic
safe_ctrl ≡ 
{ 
  ?(f1 > (HH - x1)/ε); V1 := 0
  ∪ 
  ?¬(f1 > (HH - x1)/ε); {?(x1 ≤ L1); V1 := 1 ∪ ?¬(x1 ≤ L1)}
};
{?(x2 ≤ L2); P := 1; V2 := 1 ∪ ?¬(x2 ≤ L2)};
{?(V1·f1 - V2·P·f2 < (LL - x1)/ε ∨ f2 ≤ FL ∨ V2·P·f2 > (HH - x2)/ε);
  P := 0; V2 := 0
  ∪ 
  ?¬(V1·f1 - V2·P·f2 < (LL - x1)/ε ∨ f2 ≤ FL ∨ V2·P·f2 > (HH - x2)/ε)}

// Attack scenario
ctrl_attack ≡ P := *  // Arbitrary pump manipulation

// System under attack behavior
attacked_ctrl ≡ 
{
  // Record attack impact on system
  P_attack := P;  // Store attacked pump value
  attack_pred := 1  // Flag indicating system under attack
}

// Digital Twin monitoring logic
DT_monitor ≡ 
{
  // Predictive monitoring
  future_x1 := x1 + (V1·f1 - V2·P·f2)·t_prediction;
  future_x2 := x2 + (V2·P·f2)·t_prediction
}

// Unsafe prediction condition
unsafe_pred ≡ 
  future_x1 < LL ∨ future_x1 > HH ∨ 
  future_x2 < LL ∨ future_x2 > HH

// Digital Twin intervention
DT_intervention ≡ 
{
  // Recovery actions
  ?(future_x1 > HH ∨ future_x2 > HH); // Overflow prediction
  {P := 0; V2 := 0}
  ∪
  ?(future_x1 < LL); // Underflow prediction for tank 1
  {V1 := 1; P := 0}
  ∪
  ?(future_x2 < LL); // Underflow prediction for tank 2
  {P := 1; V2 := 1}
}

// System dynamics
plant ≡ 
  x'1 = V1·f1 - V2·P·f2,
  x'2 = V2·P·f2,
  t' = 1

// Invariant conditions
Q ≡ t ≤ ε                          // Time bound for each cycle
∧ x1 ≥ 0 ∧ x2 ≥ 0                  // Water levels are non-negative
∧ f1 ≥ 0 ∧ f2 ≥ 0                  // Flow rates are non-negative
∧ t - t_attack ≤ t3                // Haven't reached safety violation time
∧ (DT_active = 1 → t - t_detect ≤ t_recovery)  // DT intervention time constraint
∧ (attack_pred = 1 → t - t_attack ≤ t2)        // Attack duration constraint

// Safety condition
S ≡ LL ≤ x1 ∧ x1 ≤ HH ∧ LL ≤ x2 ∧ x2 ≤ HH  // Water levels stay within safe bounds