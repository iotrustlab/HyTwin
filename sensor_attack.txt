A → [ (i := *;                                    // Assigns nondeterministic inputs
       x_sensor := {x1 ∪ c};                      // Sensor reading can be real or attacked
       ctrl := ctrl_orig(x_sensor);               // Control based on (potentially attacked) sensor
       ctrl_dt := ctrl_orig(x1);                  // Digital Twin uses true state
       {?(|x_sensor - x1| > threshold);           // Detect significant sensor deviation
        ctrl := safe_ctrl                         // If attack detected, apply safe control
        ∪ ?¬(|x_sensor - x1| > threshold)};      // Otherwise continue with current control
       ctrl;                                      // Execute the selected control
       {plant & Q})*                             // Evolution of physical system
    ] S

Where:

// Initial assumptions about system state and parameters
A ≡ L1 ≤ x1 ∧ x1 ≤ H1 ∧ L2 ≤ x2 ∧ x2 ≤ H2    // Initial water levels within normal range
    ∧ V1 = 0 ∧ V2 = 0 ∧ P = 0                  // Valves and pump initially off
    ∧ ε ≥ 0 ∧ FL > 0                           // Positive scan cycle time and min flow rate
    ∧ LL < L1 ∧ LL < L2                        // Lower limits below normal operating range
    ∧ L1 < H1 ∧ L2 < H2                        // Normal operating ranges
    ∧ H1 < HH ∧ H2 < HH                        // High-high limits above normal range
    ∧ c = 0                                     // Attacker's fixed sensor value

// Nondeterministic input assignment
i ≡ f1 := *; f2 := *                           

// Original control logic using sensor readings
ctrl_orig(x) ≡ 
    {?(x ≤ L1); V1 := 1                         // Open V1 if level too low
     ∪ ?(x ≥ H1); V1 := 0}                      // Close V1 if level too high

// Safe control strategy when attack detected
safe_ctrl ≡ P := 0; V1 := 0; V2 := 0           // Safely shut down all components

// Plant dynamics (unchanged)
plant ≡ x'1 = V1·f1 - V2·P·f2,                 // Rate of change of water level in Tank 1
        x'2 = V2·P·f2,                          // Rate of change of water level in Tank 2
        t' = 1                                  // Time evolution

// Evolution domain constraints
Q ≡ t ≤ ε                                      // Time bound for each control cycle
    ∧ x1 ≥ 0 ∧ x2 ≥ 0                         // Water levels cannot be negative
    ∧ f1 ≥ 0 ∧ f2 ≥ 0                         // Flow rates cannot be negative

// Safety conditions
S ≡ LL ≤ x1 ∧ x1 ≤ HH                         // Tank 1 water level within safe bounds
    ∧ LL ≤ x2 ∧ x2 ≤ HH                       // Tank 2 water level within safe bounds